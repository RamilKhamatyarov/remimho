name: Build and Test Whiteboard

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DISPLAY: ":99"

permissions:
  contents: read
  statuses: write
  checks: write
  pull-requests: write
  security-events: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 24
        uses: actions/setup-java@v3
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Setup Gradle caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Xvfb for headless JavaFX
        run: sudo apt-get install -y xvfb

      - name: Set execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Run Linter
        uses: super-linter/super-linter@v8.0.0
        continue-on-error: true
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ALL_LINTERS: false
          VALIDATE_KOTLIN: true
          DISABLE_GITHUB_STATUS_API: true
          VALIDATE_GIT_COMMIT_HISTORY: false
          HTTP_TIMEOUT: 30

      - name: KTLint with ReviewDog
        uses: ScaCap/action-ktlint@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'java,kotlin'
          queries: security-extended

      - name: Build the project
        run: ./gradlew build -x test

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Check Formatting
        run: ./gradlew spotlessCheck

      - name: Run Tests with Xvfb
        run: xvfb-run --server-args="-screen 0 1920x1080x24" ./gradlew test --info

      - name: List test results files
        if: always()
        run: find . -name "*.xml" -path "*/test-results/*" | head -20

      - name: Upload Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: |
            build/test-results/**/*.xml
          check_name: "Unit Test Results (Ubuntu Latest, JDK 24)"
          comment_mode: "always"
          report_individual_runs: true