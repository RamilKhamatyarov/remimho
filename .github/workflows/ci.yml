name: Build and Test Whiteboard

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DISPLAY: ":99"
  QUARKUS_PROFILE: ci

permissions:
  contents: read
  statuses: write
  checks: write
  pull-requests: write

jobs:
  build-and-test:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      statuses: write
      checks: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Install Xvfb for headless JavaFX
        run: sudo apt-get install -y xvfb

      - name: Set execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Code Quality Suite
        timeout-minutes: 15
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew ktlintCheck spotlessCheck
          xvfb-run ./gradlew sonarqube -Dsonar.login=$SONAR_TOKEN

      - name: Run Kotlin Linter Only
        uses: super-linter/super-linter@v7.4.0
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ALL_LINTERS: false
          VALIDATE_KOTLIN: true
          DISABLE_GITHUB_STATUS_API: true
          VALIDATE_GIT_COMMIT_HISTORY: false
          HTTP_TIMEOUT: 30

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: 'java,kotlin'
          queries: security-extended

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Check Formatting
        run: ./gradlew spotlessCheck

      - name: Apply Formatting
        if: failure()
        run: ./gradlew spotlessApply

      - name: ReviewDog Linter
        uses: reviewdog/action-ktlint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review

      - name: Build the project
        run: ./gradlew build -x test

      - name: Run Tests with Xvfb
        run: |
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          ./gradlew test --info
          killall Xvfb  # Cleanup

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: build/reports/tests