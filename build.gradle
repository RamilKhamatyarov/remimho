plugins {
    id("application")
    id("io.quarkus") version "3.25.0"
    id("org.jetbrains.kotlin.jvm") version "2.2.0"
    id("com.diffplug.spotless") version "7.2.1"
}

group = "ru.rkhamatyarov"
version = "1.0.0"

repositories {
    mavenCentral()
}

def javafxVersion = '17.0.8'

def osName = System.getProperty('os.name').toLowerCase()
def platform = osName.contains('win') ? 'win' : osName.contains('mac') ? 'mac' : 'linux'

dependencies {
    implementation(enforcedPlatform("io.quarkus.platform:quarkus-bom:3.25.3"))
    implementation("io.quarkus:quarkus-arc")
    implementation("io.quarkus:quarkus-core")
    implementation("io.quarkus:quarkus-rest")
    implementation("org.jetbrains.kotlin:kotlin-stdlib:2.2.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-javafx:1.7.3")


    implementation "org.openjfx:javafx-base:${javafxVersion}:${platform}"
    implementation "org.openjfx:javafx-controls:${javafxVersion}:${platform}"
    implementation "org.openjfx:javafx-graphics:${javafxVersion}:${platform}"
    implementation "org.openjfx:javafx-fxml:${javafxVersion}:${platform}"

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.13.4")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.13.4")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.13.4")
    testImplementation("org.testfx:testfx-junit5:4.0.18")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5:2.2.0")
    testImplementation("io.quarkus:quarkus-junit5")
}

application {
    mainClass = 'ru.rkhamatyarov.Main'
}

tasks.withType(JavaExec).configureEach {
    jvmArgs = [
            '--module-path', classpath.asPath,
            '--add-modules', 'javafx.controls,javafx.fxml,javafx.graphics,javafx.base'
    ]
}

tasks.test {
    useJUnitPlatform()
}

kotlin {
    compilerOptions {
        freeCompilerArgs.add("-Xjvm-default=all")
    }
}

spotless {
    kotlin {
        ktlint()
        target("**/*.kt")
        trimTrailingWhitespace()
        leadingTabsToSpaces()
        endWithNewline()
    }
    kotlinGradle {
        target("*.gradle.kts")
        ktlint()
    }
}